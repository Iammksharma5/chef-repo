1. Create a directory name " chef-repo" or any name

2. cd chef-repo then create a file name "web.rb" or any name with and the extension must be ".rb"  it means ruby.

3. vi first.rb   --------- means edit the file put some code as ruby and save it as below .

file '/root/mychef/hola' do
content 'welcome again i did it'
end


4. then use below command to apply: it will create a file named : hola and put the content in it as mentioned in the web.rb file.

chef-apply web.rb




=======

#############################################################################################################

Using Recipe installing Apache web servet 'httpd'.

##############################################################################################################

5. same above step from 2 .

> Create one more web.rb file and put below code:  ( do means it will create and end - will end the code) it does not mention in it so it will use default setting.



package 'httpd'
service 'httpd' do

action [:enable , :start]
end

file '/var/www/html/index.html' do 

content '<html> <body> Welcome to My Apache world</body> <marquee><h1> NOW ITS UP AND RUNNING</h1></marquee></html>'
end


6. then execute below command

     chef-apply web.rb

   
7. If you do it again "chef-apply web.rb " without any modification same file it will do nothing instead show you "up to date" :

 chef-apply web.rb
Recipe: (chef-apply cookbook)::(chef-apply recipe)
  * dnf_package[httpd] action install (up to date)
  * service[httpd] action enable (up to date)
  * service[httpd] action start (up to date)
  * file[/var/www/html/index.html] action create (up to date)  ----- ( check it shows up to date).
     
  

